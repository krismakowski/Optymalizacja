def f(x0,x1,x2,x3,x4):
    return 3*x0 - 2*x1 - 3*x4

A = matrix([[2,-1,1,0,-2],[-1,-3,0,1,1]])
for i in range(0,5):
    print(i)
    for j in range(i+1,5):
        Aij = matrix([A.column(i),A.column(j)]); print Aij.determinant()
        b = vector([4,-5])
        xij = Aij.solve_right(b); print xij; print f(xij[i],xij[j],0,0,0)



import numpy
def f(x0,x1,x2,x3,x4):
    return 3*x0 - 2*x1 - 3*x4

A = matrix([[2,-1,1,0,-2],[-1,-3,0,1,1]])
for i in range(0,5):
    print("Main loop i=%d" % i)
    for j in range(i+1,5):
        print("Inside i=%d" % i)
        print("Inside j=%d" % j)
        Aij = matrix([A.column(i),A.column(j)])
        Aij=Aij.transpose(); print Aij; print("Determinant of Aij=%s" %Aij.determinant())
        if Aij.determinant()!=0:
                b = vector([4,-5])
                xij = Aij.solve_right(b); print xij; print("Result: %s\n" %f(xij[0],xij[1],0,0,0))

Final:

def f(x0,x1,x2,x3,x4):
    return 3*x0-2*x1-3*x4

A = matrix([[2,-1,1,0,-2],[-1,-3,0,1,1]])
for i in range(0,5):
    for j in range(i+1,5):
        Aij = matrix([A.column(i),A.column(j)]).T
        print Aij; print("Determinant of Aij=%s" %Aij.determinant())
        if Aij.determinant()!=0:
                b = vector([4,-5])
                xij = Aij.solve_right(b); print xij; print("Result: %s\n" %f(xij[0],xij[1],0,0,0))